name: Flutter build

on: [push, release]

jobs:
  build-apk:
    runs-on: ubuntu-20.04
    steps:
      - name: ‚¨ÜÔ∏è Checkout
        uses: actions/checkout@v3
      - name: üîß Setup java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.0'
          channel: "stable" # or: 'beta' or 'dev'
      - name: üì¶ Get dependencies
        run: |
          cd app
          flutter pub get
      #- run: flutter test
      - name: üè≠ Build
        run: |
          cd app
          flutter doctor -v
          flutter build apk -v --release
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: apk-build
          path: app/build/app/outputs/flutter-apk/app-release.apk
  build-windows:
    runs-on: windows-2022
    steps:
      - name: ‚¨ÜÔ∏è Checkout
        uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.0'
          channel: "stable" # or: 'beta' or 'dev'
      - name: ‚úÖ Enable platforms
        run: flutter config --enable-windows-desktop
      - name: üì¶ Get dependencies
        run: |
          cd app
          flutter pub get
      - name: üè≠ Build
        shell: pwsh
        run: |
          cd app
          flutter clean
          flutter doctor -v
          flutter build windows -v --release
      - name: Build setup
        shell: pwsh
        run: |
          cd app
          Get-Content pubspec.yaml | Select-String -Pattern 'version:\s(.+)\+'  | % {Set-Item -Path Env:BITS_VERSION -Value "$($_.matches.groups[1])"}
          & 'C:/Program Files (x86)/Inno Setup 6/ISCC.exe' /DMyAppVersion=$Env:BITS_VERSION BitsSetup.iss
        # flutter pub run msix:create
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: |
            app/build/windows/runner/Release/**
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: windows-setup
          path: |
            app/build/windows/Bits-Setup.exe
  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: ‚¨ÜÔ∏è Checkout
        uses: actions/checkout@v3
      - name: Get dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-setuptools desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev liblzma-dev clang dpkg-dev patchelf alien
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.0'
          channel: "stable" # or: 'beta' or 'dev'
      - name: ‚úÖ Enable platforms
        run: flutter config --enable-linux-desktop
      - name: üì¶ Get dependencies
        run: |
          cd app
          flutter pub get
      - name: üè≠ Build
        run: |
          cd app
          flutter clean
          flutter doctor -v
          flutter build linux -v --release
      - name: Build .deb executable
        run: |
          cd app
          cp -fr build/linux/x64/release/bundle linux/debian/usr/bin
          dpkg-deb --build --root-owner-group linux/debian
          cp linux/*.deb linwood-bits-linux-x86_64.deb
      #- name: Build .rpm executable
      #  run: |
      #    cd app
      #    alien -r linwood-bits-linux-x86_64.deb
      #    mv linwood-bits*.rpm linwood-bits-linux-x86_64.rpm
      - name: Build .AppImage executable
        run: |
          cd app
          sudo wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /usr/local/bin/appimagetool
          sudo chmod +x /usr/local/bin/appimagetool
          sudo pip3 install appimage-builder
          appimage-builder --recipe AppImageBuilder.yml --skip-test
      - name: Rename AppImage
        run: |
          cd app
          mv ./*.AppImage* Linwood-Bits-linux-x86_64.AppImage
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: |
            app/build/linux/x64/release/bundle/**
      - name: Archive .deb
        uses: actions/upload-artifact@v3
        with:
          name: linux-deb
          path: |
            app/linwood-bits-linux-x86_64.deb
      #- name: Archive .rpm
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: linux-rpm
      #    path: |
      #      app/linwood-bits-linux-x86_64.rpm
      - name: Archive .AppImage
        uses: actions/upload-artifact@v3
        with:
          name: linux-appimage
          path: |
            app/Linwood-Bits-linux-x86_64.AppImage
  #build-macos:
  #  runs-on: macos-latest
  #  steps:
  #    - name: ‚¨ÜÔ∏è Checkout
  #      uses: actions/checkout@v3
  #    - uses: subosito/flutter-action@v2
  #      with:
  #        channel: "dev" # or: 'stable' or 'dev'
  #    - name: ‚úÖ Enable platforms
  #      run: flutter config --enable-macos-desktop
  #    - name: üì¶ Get dependencies
  #      run: |
  #        flutter pub get
  #    - name: üè≠ Build
  #      run: |
  #        flutter clean
  #        flutter doctor -v
  #        flutter build macos -v
  #    - name: Archive
  #      uses: actions/upload-artifact@v3
  #      with:
  #        name: macos-build
  #        path: |
  #          build/windows/runner/Release/**
  
  build-server:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
        include:
          - os: ubuntu-latest
            output-name: server-linux
          - os: macOS-latest
            output-name: server-mac
          - os: windows-latest
            output-name: server-windows.exe
    steps:
      - uses: actions/checkout@v2
      - uses: DanTup/gh-actions/setup-dart@master
      - name: Build server
        working-directory: server
        run: |
          mkdir build
          pub get
          dart compile exe bin/city_server.dart -v -o build/${{ matrix.output-name }}
      - uses: actions/upload-artifact@v2
        with:
          name: server-${{ matrix.os }}
          path: server/build/${{ matrix.output-name }}
  deploy:
    runs-on: ubuntu-20.04
    needs:
      - build-apk
      - build-windows
      - build-linux
      - build-server
    steps:
      - name: ‚¨ÜÔ∏è Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_PAT }}
      - name: Setup git
        run: |
          git config --global user.email "ci@linwood.dev"
          git config --global user.name "Linwood CI"
      - uses: actions/download-artifact@v3
        with:
          name: apk-build
      - uses: actions/download-artifact@v3
        with:
          name: windows-build
          path: windows-build/
      - uses: actions/download-artifact@v3
        with:
          name: linux-build
          path: linux-build/
      - uses: actions/download-artifact@v3
        with:
          name: linux-deb
      #- uses: actions/download-artifact@v3
      #  with:
      #    name: linux-rpm
      - uses: actions/download-artifact@v3
        with:
          name: linux-appimage
      - uses: actions/download-artifact@v3
        with:
          name: windows-setup
      - name: üì¶ Zip artifacts
        run: |
          zip -r windows.zip windows-build/*
          zip -r linux.zip linux-build/*
      - name: Configure git
        if: ${{ github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' }}
        run: |
          git --version
          git config --global user.email "actions@github.com"
          git config --global user.name "Actions"
          git pull --tags
      - name: üöÄ Deploy stable
        if: ${{ github.ref == 'refs/tags/stable' }}
        uses: softprops/action-gh-release@v1
        continue-on-error: true
        with:
          prerelease: true
          tag_name: stable
          files: |
            Bits-Setup.exe
            app-release.apk
            windows.zip
            linux.zip
            linwood-bits-linux-x86_64.deb
            Linwood-Bits-linux-x86_64.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: üöÄ Deploy nightly
        if: ${{ github.ref == 'refs/tags/nightly' }}
        uses: softprops/action-gh-release@v1
        continue-on-error: true
        with:
          prerelease: true
          tag_name: nightly
          files: |
            Bits-Setup.exe
            app-release.apk
            windows.zip
            linux.zip
            linwood-bits-linux-x86_64.deb
            Linwood-Bits-linux-x86_64.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        continue-on-error: true
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            Bits-Setup.exe
            app-release.apk
            windows.zip
            linux.zip
            linwood-bits-linux-x86_64.deb
            Linwood-Bits-linux-x86_64.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
